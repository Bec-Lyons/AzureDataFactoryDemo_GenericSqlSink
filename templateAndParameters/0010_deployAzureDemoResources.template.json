{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "dataFactoryName": {
            "type": "string",
            "defaultValue": "[newGuid()]"
        }, 
        "keyVaultName": {
            "type": "string",
            "defaultValue": "[newGuid()]" 
        }, 
        "userObjectId": {
            "type": "string",
            "defaultValue": "9e2654c3-c940-490f-8a98-e0daa71d194b" 
        },
        "database1ServerName": {
            "type": "string",
            "defaultValue": "[newGuid()]"
        },
        "database1DatabaseName": { 
            "type": "string",
            "defaultValue": "DB1"
        },
        "database1SqlAdminUsername": {
            "type": "string",
            "defaultValue": "[newGuid()]"
        },
        "database1SqlAdminPassword": {
            "type": "secureString",
            "defaultValue": ""
        },
        "database1SqlOpsUsername": {
            "type": "string",
            "defaultValue": "[newGuid()]"
        },
        "database1SqlOpsPassword": {
            "type": "secureString",
            "defaultValue": ""
        },
        "database2ServerName": {
            "type": "string",
            "defaultValue": "[newGuid()]"
        },
        "database2DatabaseName": { 
            "type": "string",
            "defaultValue": "[newGuid()]"
        },
        "database2SqlAdminUsername": {
            "type": "string",
            "defaultValue": "[newGuid()]"
        },
        "database2SqlAdminPassword": {
            "type": "secureString",
            "defaultValue": ""
        },
        "database2SqlOpsUsername": {
            "type": "string",
            "defaultValue": "[newGuid()]"
        },
        "database2SqlOpsPassword": {
            "type": "secureString",
            "defaultValue": ""
        },
        "storageAccount1Name": {
            "type": "string",
            "defaultValue": "[newGuid()]"
        },
        "storageAccount1Type": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Standard_GRS",
                "Standard_ZRS"
            ]
        },
        "storageAccount2Name": {
            "type": "string", 
            "defaultValue": "[newGuid()]"
        },
        "storageAccount2Type": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Standard_GRS",
                "Standard_ZRS"
            ]
        },
        "storageAccountTempName": {
            "type": "string", 
            "defaultValue": "[newGuid()]"
        },
        "storageAccountTempType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Standard_GRS",
                "Standard_ZRS"
            ]
        },
        "storageAccountConfigName": {
            "type": "string", 
            "defaultValue": "[newGuid()]"
        },
        "storageAccountConfigType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Standard_GRS",
                "Standard_ZRS"
            ]
        }
    },
    "resources": [
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2016-10-01",
            "name": "[parameters('keyVaultName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "sku": {
                    "family": "A",
                    "name": "Standard"
                },
                "tenantId": "[subscription().tenantId]",
                "accessPolicies": [
                    {
                        "tenantId": "[subscription().tenantId]",
                        "objectId": "[parameters('userObjectId')]",
                        "permissions": {
                            "keys": [
                                "Get",
                                "List",
                                "Update",
                                "Create",
                                "Import",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore"
                            ],
                            "secrets": [
                                "Get",
                                "List",
                                "Set",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore"
                            ],
                            "certificates": [
                                "Get",
                                "List",
                                "Update",
                                "Create",
                                "Import",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore",
                                "ManageContacts",
                                "ManageIssuers",
                                "GetIssuers",
                                "ListIssuers",
                                "SetIssuers",
                                "DeleteIssuers"
                            ]
                        }
                    }
                ],
                "enabledForDeployment": false,
                "enabledForDiskEncryption": false,
                "enabledForTemplateDeployment": false
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "name": "[concat(parameters('keyVaultName'), '/', parameters('database1ServerName'), '-', parameters('database1DatabaseName'), '-', parameters('database1SqlOpsUsername'), 'SqlAuthConnectionString')]", 
            "apiVersion": "2018-02-14",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
            ],
            "properties": {
                "value": "[concat('Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=', parameters('database1ServerName'), '.database.windows.net;Initial Catalog=', parameters('database1DatabaseName'), ';User ID=', parameters('database1SqlOpsUserName'), ';Password=', parameters('database1SqlOpsPassword'))]"
            } 
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "name": "[concat(parameters('keyVaultName'), '/', parameters('database2ServerName'), '-', parameters('database2DatabaseName'), '-', parameters('database2SqlOpsUsername'), 'SqlAuthConnectionString')]", 
            "apiVersion": "2018-02-14",
            "location": "[resourceGroup().location]", 
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
            ],
            "properties": {
                "value": "[concat('Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=', parameters('database2ServerName'), '.database.windows.net;Initial Catalog=', parameters('database2DatabaseName'), ';User ID=', parameters('database2SqlOpsUserName'), ';Password=', parameters('database2SqlOpsPassword'))]"
            }
        }, 
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "name": "[concat(parameters('keyVaultName'), '/', parameters('storageAccount1Name'), 'AccountKeyConnectionString')]", 
            "apiVersion": "2018-02-14",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccount1Name'))]", 
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
            ],
            "properties": {
                "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('StorageAccount1Name'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccount1Name')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value, ';EndpointSuffix=core.windows.net')]"
            }
        }, 
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "name": "[concat(parameters('keyVaultName'), '/', parameters('storageAccount2Name'), 'AccountKeyConnectionString')]", 
            "apiVersion": "2018-02-14",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccount2Name'))]", 
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
            ],
            "properties": {
                "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('StorageAccount2Name'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccount2Name')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value, ';EndpointSuffix=core.windows.net')]"
            }
        },     
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "name": "[concat(parameters('keyVaultName'), '/', parameters('storageAccountConfigName'), 'AccountKeyConnectionString')]", 
            "apiVersion": "2018-02-14",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountConfigName'))]", 
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
            ],
            "properties": {
                "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('StorageAccountConfigName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccountConfigName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value, ';EndpointSuffix=core.windows.net')]"
            }
        },             
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "name": "[concat(parameters('keyVaultName'), '/', parameters('storageAccountTempName'), 'AccountKeyConnectionString')]", 
            "apiVersion": "2018-02-14",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountTempName'))]", 
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
            ],
            "properties": {
                "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('StorageAccountTempName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccountTempName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value, ';EndpointSuffix=core.windows.net')]"
            }
        },     
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-04-01",
            "name": "[parameters('storageAccount1Name')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "[parameters('storageAccount1Type')]",
                "tier": "Standard" 
            },
            "kind": "StorageV2",
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [
                    ],
                    "ipRules": [
                    ],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },        
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-04-01",
            "name": "[parameters('storageAccount2Name')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "[parameters('storageAccount2Type')]",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [
                    ],
                    "ipRules": [
                    ],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-04-01",
            "name": "[parameters('storageAccountTempName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "[parameters('storageAccountTempType')]",
                "tier": "Standard" 
            },
            "kind": "StorageV2",
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [
                    ],
                    "ipRules": [
                    ],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-04-01",
            "name": "[parameters('storageAccountConfigName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "[parameters('storageAccountConfigType')]",
                "tier": "Standard" 
            },
            "kind": "StorageV2",
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [
                    ],
                    "ipRules": [
                    ],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('storageAccount1Name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccount1Name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": [
                    ]
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('storageAccount2Name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccount2Name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": [
                    ]
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('storageAccountTempName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountTempName'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": [
                    ]
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('storageAccountConfigName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountConfigName'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": [
                    ]
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('storageAccount1Name'), '/default/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccount1Name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccount1Name'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('storageAccount2Name'), '/default/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccount2Name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccount2Name'))]"
            ],
            "properties": {
                "publicAccess": "None"
            } 
        },        
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('storageAccountTempName'), '/default/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccountTempName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountTempName'))]"
            ],
            "properties": {
                "publicAccess": "None"
            } 
        },        
        { 
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('storageAccountConfigName'), '/default/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccountConfigName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountConfigName'))]"
            ],
            "properties": {
                "publicAccess": "None"
            } 
        },
        {
            "type": "Microsoft.Sql/servers",
            "name": "[parameters('database1ServerName')]",
            "location": "[resourceGroup().location]",
            "apiVersion": "2015-05-01-preview",
            "properties": {
                "administratorLogin": "[parameters('database1SqlAdminUsername')]",
                "administratorLoginPassword": "[parameters('database1SqlAdminPassword')]",
                "version": "12.0"
            },
            "resources": [
                {
                    "type": "Microsoft.Sql/servers/databases",
                    "name": "[concat(string(parameters('database1ServerName')), '/', parameters('database1DatabaseName'))]",
                    "location": "[resourceGroup().location]",
                    "apiVersion": "2017-10-01-preview",
                    "sku": {
                        "name": "S0",
                        "tier": "Standard"
                    },
                    "dependsOn": [
                        "[resourceID('Microsoft.Sql/servers/', parameters('database1ServerName'))]"
                    ]
                },
                {
                    "type": "firewallrules",
                    "name": "AllowAllAzureIps",
                    "location": "[resourceGroup().location]",
                    "apiVersion": "2015-05-01-preview",
                    "dependsOn": [
                        "[resourceID('Microsoft.Sql/servers/', parameters('database1ServerName'))]"
                    ],
                    "properties": {
                        "startIpAddress": "0.0.0.0",
                        "endIpAddress": "255.255.255.255"
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Sql/servers",
            "name": "[parameters('database2ServerName')]",
            "location": "[resourceGroup().location]",
            "apiVersion": "2015-05-01-preview",
            "properties": {
                "administratorLogin": "[parameters('database2SqlAdminUsername')]",
                "administratorLoginPassword": "[parameters('database2SqlAdminPassword')]",
                "version": "12.0"
            },
            "resources": [ 
                {
                    "type": "Microsoft.Sql/servers/databases",
                    "name": "[concat(string(parameters('database2ServerName')), '/', parameters('database2DatabaseName'))]",
                    "location": "[resourceGroup().location]",
                    "apiVersion": "2017-10-01-preview",
                    "sku": {
                        "name": "S0",
                        "tier": "Standard"
                    },
                    "dependsOn": [
                        "[resourceID('Microsoft.Sql/servers/', parameters('database2ServerName'))]"
                    ]
                },
                {
                    "type": "firewallrules",
                    "name": "AllowAllAzureIps",
                    "location": "[resourceGroup().location]",
                    "apiVersion": "2015-05-01-preview",
                    "dependsOn": [
                        "[resourceID('Microsoft.Sql/servers/', parameters('database2ServerName'))]"
                    ],
                    "properties": {
                        "startIpAddress": "0.0.0.0",
                        "endIpAddress": "255.255.255.255"
                    }
                }
            ]
        }
    ], 
    "outputs": {}    
}