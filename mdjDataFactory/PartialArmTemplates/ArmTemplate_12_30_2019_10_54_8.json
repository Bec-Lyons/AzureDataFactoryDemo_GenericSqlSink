{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "mdjDataFactory"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Azure Blob Single Csv to Azure Sql Database Table Copy Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Source Structure",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "azureBlobSingleCsvFileNameDataset",
								"type": "DatasetReference",
								"parameters": {
									"azureBlobConnectionStringSecretName": {
										"value": "@pipeline().parameters.sourceAzureBlobConnectionStringSecretName",
										"type": "Expression"
									},
									"azureBlobSingleCSVFileName": {
										"value": "@pipeline().parameters.sourceAzureBlobSingleCsvFileName",
										"type": "Expression"
									},
									"azureBlobSingleCSVFolderPath": {
										"value": "@pipeline().parameters.sourceAzureBlobSingleCsvFolderPath",
										"type": "Expression"
									},
									"azureBlobSingleCSVContainerName": {
										"value": "@pipeline().parameters.sourceAzureBlobSingleCsvContainerName",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"structure"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Find or Create Sink Table",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Get Source Structure",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "utils.sp_FindOrCreateSinkTable",
								"storedProcedureParameters": {
									"multipleMatches": {
										"type": "Boolean",
										"value": null
									},
									"sinkAzureSqlDatabaseConnectionStringSecretName": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.sinkAzureSqlDatabaseConnectionStringSecretName",
											"type": "Expression"
										}
									},
									"sinkAzureSqlDatabaseTableSchemaName": {
										"type": "String",
										"value": {
											"value": "@{\n   if(\n      equals(\n         pipeline().parameters.sinkAzureSqlDatabaseTableSchemaName, \n         ''\n      ), \n      'utils', \n      pipeline().parameters.sinkAzureSqlDatabaseTableSchemaName\n   )\n}",
											"type": "Expression"
										}
									},
									"sinkAzureSqlDatabaseTableTableName": {
										"type": "String",
										"value": {
											"value": "@{\n   if(\n      equals(\n         pipeline().parameters.sinkAzureSqlDatabaseTableSchemaName, \n         ''\n      ), \n      'utils', \n      pipeline().parameters.sinkAzureSqlDatabaseTableSchemaName\n   )\n}",
											"type": "Expression"
										}
									},
									"suppliedStructure": {
										"type": "String",
										"value": {
											"value": "@string(activity('Get Source Structure').output.structure)",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "azureSqlDatabaseTableDataset",
								"type": "DatasetReference",
								"parameters": {
									"azureSqlDatabaseConnectionStringSecretName": {
										"value": "@pipeline().parameters.sinkAzureSqlDatabaseConnectionStringSecretName",
										"type": "Expression"
									},
									"azureSqlDatabaseTableSchemaName": "foo",
									"azureSqlDatabaseTableTableName": "bar"
								}
							}
						}
					},
					{
						"name": "Decide If Truncate Sink Table",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Find or Create Sink Table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@pipeline().parameters.truncatePriorToCopy",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Exec Pipeline Truncate Sink Table",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Azure Sql Database Truncate Table Pipeline",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"azureSqlDatabaseConnectionStringSecretName": {
												"value": "@pipeline().parameters.sinkAzureSqlDatabaseConnectionStringSecretName",
												"type": "Expression"
											},
											"azureSqlDatabaseTableSchemaName": {
												"value": "@activity('Find or Create Sink Table').output.firstRow.sinkAzureSqlDatabaseTableSchemaName",
												"type": "Expression"
											},
											"azureSqlDatabaseTableTableName": {
												"value": "@activity('Find or Create Sink Table').output.firstRow.sinkAzureSqlDatabaseTableTableName",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Source to Sink",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Decide If Truncate Sink Table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "azureBlobSingleCsvFileNameDataset",
								"type": "DatasetReference",
								"parameters": {
									"azureBlobConnectionStringSecretName": {
										"value": "@pipeline().parameters.sourceAzureBlobConnectionStringSecretName",
										"type": "Expression"
									},
									"azureBlobSingleCSVFileName": {
										"value": "@pipeline().parameters.sourceAzureBlobSingleCsvFileName",
										"type": "Expression"
									},
									"azureBlobSingleCSVFolderPath": {
										"value": "@pipeline().parameters.sourceAzureBlobSingleCsvFolderPath",
										"type": "Expression"
									},
									"azureBlobSingleCSVContainerName": {
										"value": "@pipeline().parameters.sourceAzureBlobSingleCsvContainerName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "azureSqlDatabaseTableDataset",
								"type": "DatasetReference",
								"parameters": {
									"azureSqlDatabaseConnectionStringSecretName": {
										"value": "@pipeline().parameters.sinkAzureSqlDatabaseConnectionStringSecretName",
										"type": "Expression"
									},
									"azureSqlDatabaseTableSchemaName": {
										"value": "@activity('Find or Create Sink Table').output.firstRow.sinkAzureSqlDatabaseTableSchemaName",
										"type": "Expression"
									},
									"azureSqlDatabaseTableTableName": {
										"value": "@activity('Find or Create Sink Table').output.firstRow.sinkAzureSqlDatabaseTableTableName",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Decide If Delete Original File",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Source to Sink",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@pipeline().parameters.deleteSourceFile",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Exec Pipeline Azure Blob Delete Single File",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Azure Blob Delete Single Csv File Pipeline",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"azureBlobConnectionStringSecretName": {
												"value": "@pipeline().parameters.sourceAzureBlobConnectionStringSecretName",
												"type": "Expression"
											},
											"azureBlobContainerName": {
												"value": "@pipeline().parameters.sourceAzureBlobSingleCsvContainerName",
												"type": "Expression"
											},
											"azureBlobFolderPath": {
												"value": "@pipeline().parameters.sourceAzureBlobSingleCsvFolderPath",
												"type": "Expression"
											},
											"azureBlobFileName": {
												"value": "@pipeline().parameters.sourceAzureBlobSingleCsvFileName",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"sourceAzureBlobConnectionStringSecretName": {
						"type": "string"
					},
					"sourceAzureBlobSingleCsvContainerName": {
						"type": "string"
					},
					"sourceAzureBlobSingleCsvFolderPath": {
						"type": "string"
					},
					"sourceAzureBlobSingleCsvFileName": {
						"type": "string"
					},
					"sinkAzureSqlDatabaseConnectionStringSecretName": {
						"type": "string"
					},
					"truncatePriorToCopy": {
						"type": "bool"
					},
					"deleteSourceFile": {
						"type": "bool"
					},
					"sinkAzureSqlDatabaseTableSchemaName": {
						"type": "string"
					},
					"sinkAzureSqlDatabaseTableTableName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Source Azure Blob Single Csv/Copy"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Azure Blob Single Csv to Azure Sql Database Table Data Flow Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Source Structure",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "azureBlobSingleCsvFileNameDataset",
								"type": "DatasetReference",
								"parameters": {
									"azureBlobConnectionStringSecretName": {
										"value": "@pipeline().parameters.sourceAzureBlobConnectionStringSecretName",
										"type": "Expression"
									},
									"azureBlobSingleCSVFileName": {
										"value": "@pipeline().parameters.sourceAzureBlobSingleCsvFileName",
										"type": "Expression"
									},
									"azureBlobSingleCSVFolderPath": {
										"value": "@pipeline().parameters.sourceAzureBlobSingleCsvFolderPath",
										"type": "Expression"
									},
									"azureBlobSingleCSVContainerName": {
										"value": "@pipeline().parameters.sourceAzureBlobSingleCsvContainerName",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"structure"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Find or Create Sink Table",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Get Source Structure",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "utils.sp_FindOrCreateSinkTable",
								"storedProcedureParameters": {
									"multipleMatches": {
										"type": "Boolean",
										"value": null
									},
									"sinkAzureSqlDatabaseConnectionStringSecretName": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.sinkAzureSqlDatabaseConnectionStringSecretName",
											"type": "Expression"
										}
									},
									"sinkAzureSqlDatabaseTableSchemaName": {
										"type": "String",
										"value": {
											"value": "@{\n   if(\n      equals(\n         pipeline().parameters.sinkAzureSqlDatabaseTableSchemaName, \n         ''\n      ), \n      'utils', \n      pipeline().parameters.sinkAzureSqlDatabaseTableSchemaName\n   )\n}",
											"type": "Expression"
										}
									},
									"sinkAzureSqlDatabaseTableTableName": {
										"type": "String",
										"value": {
											"value": "@{concat(\n   pipeline().parameters.sourceAzureBlobConnectionStringSecretName, \n   '/', \n   pipeline().parameters.sourceAzureBlobSingleCsvContainerName, \n   '/', \n   pipeline().parameters.sourceAzureBlobSingleCsvFolderPath, \n   '/', \n   pipeline().parameters.sourceAzureBlobSingleCsvFileName, \n   '/', \n   utcNow()\n)}",
											"type": "Expression"
										}
									},
									"suppliedStructure": {
										"type": "String",
										"value": {
											"value": "@string(activity('Get Source Structure').output.structure)",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "azureSqlDatabaseTableDataset",
								"type": "DatasetReference",
								"parameters": {
									"azureSqlDatabaseConnectionStringSecretName": {
										"value": "@pipeline().parameters.sinkAzureSqlDatabaseConnectionStringSecretName",
										"type": "Expression"
									},
									"azureSqlDatabaseTableSchemaName": "foo",
									"azureSqlDatabaseTableTableName": "bar"
								}
							}
						}
					},
					{
						"name": "Decide If Truncate Sink Table",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Find or Create Sink Table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@pipeline().parameters.truncatePriorToCopy",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Exec Pipeline Truncate Sink Table",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Azure Sql Database Truncate Table Pipeline",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"azureSqlDatabaseConnectionStringSecretName": {
												"value": "@pipeline().parameters.sinkAzureSqlDatabaseConnectionStringSecretName",
												"type": "Expression"
											},
											"azureSqlDatabaseTableSchemaName": {
												"value": "@activity('Find or Create Sink Table').output.firstRow.sinkAzureSqlDatabaseTableSchemaName",
												"type": "Expression"
											},
											"azureSqlDatabaseTableTableName": {
												"value": "@activity('Find or Create Sink Table').output.firstRow.sinkAzureSqlDatabaseTableTableName",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "azureBlobSingleCSVToAzureSqlDatabaseTableDataFlow",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Decide If Truncate Sink Table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "azureBlobSingleCsvToAzureSqlDatabaseTableDataFlow",
								"type": "DataFlowReference",
								"parameters": {
									"sourceConnectionSecretName": {
										"value": "'@{pipeline().parameters.sourceAzureBlobConnectionStringSecretName}'",
										"type": "Expression"
									},
									"sinkConnectionStringSecretName": {
										"value": "'@{pipeline().parameters.sinkAzureSqlDatabaseConnectionStringSecretName}'",
										"type": "Expression"
									},
									"sourceObjectName": {
										"value": "'@{concat(\n   pipeline().parameters.sourceAzureBlobConnectionStringSecretName, \n   '/', \n   pipeline().parameters.sourceAzureBlobSingleCsvFolderPath, \n   '/', \n   pipeline().parameters.sourceAzureBlobSingleCsvFileName\n)}'",
										"type": "Expression"
									},
									"sinkObjectName": {
										"value": "'@{concat(\n   '[', \n   activity('Find or Create Sink Table').output.firstRow.sinkAzureSqlDatabaseTableSchemaName, \n   '].[', \n   activity('Find or Create Sink Table').output.firstRow.sinkAzureSqlDatabaseTableTableName, \n   ']'\n)}'",
										"type": "Expression"
									},
									"dataFactoryName": {
										"value": "'@{pipeline().DataFactory}'",
										"type": "Expression"
									},
									"dataFactoryPipelineName": {
										"value": "'@{pipeline().Pipeline}'",
										"type": "Expression"
									},
									"dataFactoryPipelineRunId": {
										"value": "'@{pipeline().RunId}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"readFromAzureBlobSingleCSV": {
										"azureBlobConnectionStringSecretName": {
											"value": "@pipeline().parameters.sourceAzureBlobConnectionStringSecretName",
											"type": "Expression"
										},
										"azureBlobSingleCSVFileName": {
											"value": "@pipeline().parameters.sourceAzureBlobSingleCsvFileName",
											"type": "Expression"
										},
										"azureBlobSingleCSVFolderPath": {
											"value": "@pipeline().parameters.sourceAzureBlobSingleCsvFolderPath",
											"type": "Expression"
										},
										"azureBlobSingleCSVContainerName": {
											"value": "@pipeline().parameters.sourceAzureBlobSingleCsvContainerName",
											"type": "Expression"
										}
									},
									"WriteToAzureSqlTable": {
										"azureSqlDatabaseConnectionStringSecretName": {
											"value": "@pipeline().parameters.sinkAzureSqlDatabaseConnectionStringSecretName",
											"type": "Expression"
										},
										"azureSqlDatabaseTableSchemaName": {
											"value": "@activity('Find or Create Sink Table').output.firstRow.sinkAzureSqlDatabaseTableSchemaName",
											"type": "Expression"
										},
										"azureSqlDatabaseTableTableName": {
											"value": "@activity('Find or Create Sink Table').output.firstRow.sinkAzureSqlDatabaseTableTableName",
											"type": "Expression"
										}
									}
								}
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					},
					{
						"name": "Decide If Delete Original File",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "azureBlobSingleCSVToAzureSqlDatabaseTableDataFlow",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@pipeline().parameters.deleteSourceFile",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Exec Pipeline Azure Blob Delete Single File",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Azure Blob Delete Single Csv File Pipeline",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"azureBlobConnectionStringSecretName": {
												"value": "@pipeline().parameters.sourceAzureBlobConnectionStringSecretName",
												"type": "Expression"
											},
											"azureBlobContainerName": {
												"value": "@pipeline().parameters.sourceAzureBlobSingleCsvContainerName",
												"type": "Expression"
											},
											"azureBlobFolderPath": {
												"value": "@pipeline().parameters.sourceAzureBlobSingleCsvFolderPath",
												"type": "Expression"
											},
											"azureBlobFileName": {
												"value": "@pipeline().parameters.sourceAzureBlobSingleCsvFileName",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"sourceAzureBlobConnectionStringSecretName": {
						"type": "string"
					},
					"sourceAzureBlobSingleCsvContainerName": {
						"type": "string"
					},
					"sourceAzureBlobSingleCsvFolderPath": {
						"type": "string"
					},
					"sourceAzureBlobSingleCsvFileName": {
						"type": "string"
					},
					"sinkAzureSqlDatabaseConnectionStringSecretName": {
						"type": "string"
					},
					"truncatePriorToCopy": {
						"type": "bool"
					},
					"deleteSourceFile": {
						"type": "bool"
					},
					"sinkAzureSqlDatabaseTableSchemaName": {
						"type": "string"
					},
					"sinkAzureSqlDatabaseTableTableName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Source Azure Blob Single Csv/Data Flow"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Azure Sql Database Table to Azure Sql Database Table Data Flow Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Source Structure",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "azureSqlDatabaseTableDataset",
								"type": "DatasetReference",
								"parameters": {
									"azureSqlDatabaseConnectionStringSecretName": {
										"value": "@pipeline().parameters.sourceAzureSqlDatabaseConnectionStringSecretName",
										"type": "Expression"
									},
									"azureSqlDatabaseTableSchemaName": {
										"value": "@pipeline().parameters.sourceAzureSqlDatabaseTableSchemaName",
										"type": "Expression"
									},
									"azureSqlDatabaseTableTableName": {
										"value": "@pipeline().parameters.sourceAzureSqlDatabaseTableTableName",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"structure"
							]
						}
					},
					{
						"name": "Find or Create Sink Table",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Get Source Structure",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "utils.sp_FindOrCreateSinkTable",
								"storedProcedureParameters": {
									"multipleMatches": {
										"type": "Boolean",
										"value": null
									},
									"sinkAzureSqlDatabaseConnectionStringSecretName": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.sinkAzureSqlDatabaseConnectionStringSecretName",
											"type": "Expression"
										}
									},
									"sinkAzureSqlDatabaseTableSchemaName": {
										"type": "String",
										"value": {
											"value": "@{\n   if(\n      equals(\n         pipeline().parameters.sinkAzureSqlDatabaseTableSchemaName, \n         ''\n      ), \n      'utils', \n      pipeline().parameters.sinkAzureSqlDatabaseTableSchemaName\n   )\n}",
											"type": "Expression"
										}
									},
									"sinkAzureSqlDatabaseTableTableName": {
										"type": "String",
										"value": {
											"value": "@{\n   if(\n      equals(\n         pipeline().parameters.sinkAzureSqlDatabaseTableTableName, \n         ''\n      ), \n      concat(\n         pipeline().parameters.sourceAzureSqlDatabaseConnectionStringSecretName, '/', \n         pipeline().parameters.sourceAzureSqlDatabaseTableSchemaName, '/', \n         pipeline().parameters.sourceAzureSqlDatabaseTableTableName, '/', \n         utcNow()\n      ),\n      pipeline().parameters.sinkAzureSqlDatabaseTableTableName\n   )\n}",
											"type": "Expression"
										}
									},
									"suppliedStructure": {
										"type": "String",
										"value": {
											"value": "@string(activity('Get Source Structure').output.structure)",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "azureSqlDatabaseTableDataset",
								"type": "DatasetReference",
								"parameters": {
									"azureSqlDatabaseConnectionStringSecretName": {
										"value": "@pipeline().parameters.sinkAzureSqlDatabaseConnectionStringSecretName",
										"type": "Expression"
									},
									"azureSqlDatabaseTableSchemaName": "foo",
									"azureSqlDatabaseTableTableName": "bar"
								}
							}
						}
					},
					{
						"name": "Decide If Truncate Sink Table",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Find or Create Sink Table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@pipeline().parameters.truncatePriorToCopy",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Exec Pipeline Truncate Sink Table",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Azure Sql Database Truncate Table Pipeline",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"azureSqlDatabaseConnectionStringSecretName": {
												"value": "@pipeline().parameters.sinkAzureSqlDatabaseConnectionStringSecretName",
												"type": "Expression"
											},
											"azureSqlDatabaseTableSchemaName": {
												"value": "@activity('Find or Create Sink Table').output.firstRow.sinkAzureSqlDatabaseTableSchemaName",
												"type": "Expression"
											},
											"azureSqlDatabaseTableTableName": {
												"value": "@activity('Find or Create Sink Table').output.firstRow.sinkAzureSqlDatabaseTableTableName",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "azureSqlDatabaseTableToAzureSqlDatabaseTableDataFlow",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Decide If Truncate Sink Table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "azureSqlDatabaseTableToAzureSqlDatabaseTableDataFlow",
								"type": "DataFlowReference",
								"parameters": {
									"sourceConnectionSecretName": {
										"value": "'@{pipeline().parameters.sourceAzureSqlDatabaseConnectionStringSecretName}'",
										"type": "Expression"
									},
									"sinkConnectionStringSecretName": {
										"value": "'@{pipeline().parameters.sinkAzureSqlDatabaseConnectionStringSecretName}'",
										"type": "Expression"
									},
									"sourceObjectName": {
										"value": "'@{concat(\n   '[', \n   pipeline().parameters.sourceAzureSqlDatabaseTableSchemaName, \n   '].[', \n   pipeline().parameters.sourceAzureSqlDatabaseTableTableName, \n   ']'\n)}'",
										"type": "Expression"
									},
									"sinkObjectName": {
										"value": "'@{concat(\n   '[', \n   pipeline().parameters.sinkAzureSqlDatabaseTableSchemaName,\n   '].[', \n   pipeline().parameters.sinkAzureSqlDatabaseTableTableName, \n   ']'\n)}'",
										"type": "Expression"
									},
									"dataFactoryName": {
										"value": "'@{pipeline().DataFactory}'",
										"type": "Expression"
									},
									"dataFactoryPipelineName": {
										"value": "'@{pipeline().Pipeline}'",
										"type": "Expression"
									},
									"dataFactoryPipelineRunId": {
										"value": "'@{pipeline().RunId}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"readFromAzureSqlDatabase": {
										"azureSqlDatabaseConnectionStringSecretName": {
											"value": "@pipeline().parameters.sourceAzureSqlDatabaseConnectionStringSecretName",
											"type": "Expression"
										},
										"azureSqlDatabaseTableSchemaName": {
											"value": "@pipeline().parameters.sourceAzureSqlDatabaseTableSchemaName",
											"type": "Expression"
										},
										"azureSqlDatabaseTableTableName": {
											"value": "@pipeline().parameters.sourceAzureSqlDatabaseTableTableName",
											"type": "Expression"
										}
									},
									"writeToAzureSqlDatabaseTable": {
										"azureSqlDatabaseConnectionStringSecretName": {
											"value": "@pipeline().parameters.sinkAzureSqlDatabaseConnectionStringSecretName",
											"type": "Expression"
										},
										"azureSqlDatabaseTableSchemaName": {
											"value": "@pipeline().parameters.sinkAzureSqlDatabaseTableSchemaName",
											"type": "Expression"
										},
										"azureSqlDatabaseTableTableName": {
											"value": "@pipeline().parameters.sinkAzureSqlDatabaseTableTableName",
											"type": "Expression"
										}
									}
								}
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"parameters": {
					"sourceAzureSqlDatabaseConnectionStringSecretName": {
						"type": "string"
					},
					"sourceAzureSqlDatabaseTableSchemaName": {
						"type": "string"
					},
					"sourceAzureSqlDatabaseTableTableName": {
						"type": "string"
					},
					"sinkAzureSqlDatabaseConnectionStringSecretName": {
						"type": "string"
					},
					"sinkAzureSqlDatabaseTableSchemaName": {
						"type": "string"
					},
					"sinkAzureSqlDatabaseTableTableName": {
						"type": "string"
					},
					"truncatePriorToCopy": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Source Azure Sql Database Table/Data Flow"
				},
				"annotations": []
			},
			"dependsOn": []
		}
	]
}