{
	"name": "Example Driver - Source Azure Blob Single Parquet",
	"properties": {
		"activities": [
			{
				"name": "If AzBlb1Prqt2AzBlb1CsvDf",
				"type": "IfCondition",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(\n   item().pipelineName, \n   'Azure Blob Single Parquet to Azure Blob Single Csv Data Flow Pipeline'\n)",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "AzBlb1Prqt2AzBlb1CsvDf",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "Azure Blob Single Parquet to Azure Blob Single Csv Data Flow Pipeline",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"sourceAzureBlobConnectionStringSecretName": {
										"value": "@item().sourceAzureBlobConnectionStringSecretName",
										"type": "Expression"
									},
									"sourceAzureBlobSingleParquetContainerName": {
										"value": "@item().sourceAzureBlobSingleParquetContainerName",
										"type": "Expression"
									},
									"sourceAzureBlobSingleParquetFolderPath": {
										"value": "@item.sourceAzureBlobSingleParquetFolderPath",
										"type": "Expression"
									},
									"sourceAzureBlobSingleParquetFileName": {
										"value": "@item().sourceAzureBlobSingleParquetFileName",
										"type": "Expression"
									},
									"sinkAzureBlobConnectionStringSecretName": {
										"value": "@item().sinkAzureBlobConnectionStringSecretName",
										"type": "Expression"
									},
									"sinkAzureBlobSingleCsvContainerName": {
										"value": "@item().sinkAzureBlobSingleCsvContainerName",
										"type": "Expression"
									},
									"sinkAzureBlobSingleCsvFolderPath": {
										"value": "@item().sinkAzureBlobSingleCsvFolderPath",
										"type": "Expression"
									},
									"sinkAzureBlobSingleCsvFileName": {
										"value": "@item().sinkAzureBlobSingleCsvFileName",
										"type": "Expression"
									},
									"deleteSourceFile": {
										"value": "@item().deleteSourceFile",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			},
			{
				"name": "If AzBlb1Prqt2AzBlb1JsonDf",
				"type": "IfCondition",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(\n   item().pipelineName, \n   'Azure Blob Single Parquet to Azure Blob Single Json Data Flow Pipeline'\n)",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "AzBlob1Prqt2AzBlob1JsonDfPipeline",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "Azure Blob Single Parquet to Azure Blob Single Json Data Flow Pipeline",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"sourceAzureBlobConnectionStringSecretName": {
										"value": "@item().parameters.sourceAzureBlobConnectionStringSecretName",
										"type": "Expression"
									},
									"sourceAzureBlobSingleParquetContainerName": {
										"value": "@item().parameters.sourceAzureBlobSingleParquetContainerName",
										"type": "Expression"
									},
									"sourceAzureBlobSingleParquetFolderPath": {
										"value": "@item().parameters.sourceAzureBlobSingleParquetFolderPath",
										"type": "Expression"
									},
									"sourceAzureBlobSingleParquetFileName": {
										"value": "@item().parameters.sourceAzureBlobSingleParquetFileName",
										"type": "Expression"
									},
									"sinkAzureBlobConnectionStringSecretName": {
										"value": "@item().parameters.sinkAzureBlobConnectionStringSecretName",
										"type": "Expression"
									},
									"sinkAzureBlobSingleJsonContainerName": {
										"value": "@item().parameters.sinkAzureBlobSingleJsonContainerName",
										"type": "Expression"
									},
									"sinkAzureBlobSingleJsonFolderPath": {
										"value": "@item().parameters.sinkAzureBlobSingleJsonFolderPath",
										"type": "Expression"
									},
									"sinkAzureBlobSingleJsonFileName": {
										"value": "@item().parameters.sinkAzureBlobSingleJsonFileName",
										"type": "Expression"
									},
									"deleteSourceFile": {
										"value": "@item().parameters.deleteSourceFile",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			},
			{
				"name": "If AzBlb1Prqt2AzBlb1PrqtDf",
				"type": "IfCondition",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(\n   item().pipelineName, \n   'Azure Blob Single Parquet to Azure Blob Single Parquet Data Flow Pipeline'\n)",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "AzBlob1Prqt2AzBlob1PrqtDfPipeline",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "Azure Blob Single Parquet to Azure Blob Single Parquet Data Flow Pipeline",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"sourceAzureBlobConnectionStringSecretName": {
										"value": "@item().parameters.sourceAzureBlobConnectionStringSecretName",
										"type": "Expression"
									},
									"sourceAzureBlobSingleParquetContainerName": {
										"value": "@item().parameters.sourceAzureBlobSingleParquetContainerName",
										"type": "Expression"
									},
									"sourceAzureBlobSingleParquetFolderPath": {
										"value": "@item().parameters.sourceAzureBlobSingleParquetFolderPath",
										"type": "Expression"
									},
									"sourceAzureBlobSingleParquetFileName": {
										"value": "@item().parameters.sourceAzureBlobSingleParquetFileName",
										"type": "Expression"
									},
									"sinkAzureBlobConnectionStringSecretName": {
										"value": "@item().parameters.sinkAzureBlobConnectionStringSecretName",
										"type": "Expression"
									},
									"sinkAzureBlobSingleParquetContainerName": {
										"value": "@item().parameters.sinkAzureBlobSingleParquetContainerName",
										"type": "Expression"
									},
									"sinkAzureBlobSingleParquetFolderPath": {
										"value": "@item().parameters.sinkAzureBlobSingleParquetFolderPath",
										"type": "Expression"
									},
									"sinkAzureBlobSingleParquetFileName": {
										"value": "@item().parameters.sinkAzureBlobSingleParquetFileName",
										"type": "Expression"
									},
									"deleteSourceFile": {
										"value": "@item().parameters.deleteSourceFile",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			},
			{
				"name": "If AzBlb1Prqt2AzSqlDbTblDf",
				"type": "IfCondition",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(\n   item().pipelineName, \n   'Azure Blob Single Parquet to Azure Sql Database Table Data Flow Pipeline'\n)",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "AzBlob1Prqt2AzSqlDbTblDfPipeline",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "Azure Blob Single Parquet to Azure Sql Database Table Data Flow Pipeline",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"sourceAzureBlobConnectionStringSecretName": {
										"value": "@item().parameters.sourceAzureBlobConnectionStringSecretName",
										"type": "Expression"
									},
									"sourceAzureBlobSingleParquetContainerName": {
										"value": "@item().parameters.sourceAzureBlobSingleParquetContainerName",
										"type": "Expression"
									},
									"sourceAzureBlobSingleParquetFolderPath": {
										"value": "@item().parameters.sourceAzureBlobSingleParquetFolderPath",
										"type": "Expression"
									},
									"sourceAzureBlobSingleParquetFileName": {
										"value": "@item().parameters.sourceAzureBlobSingleParquetFileName",
										"type": "Expression"
									},
									"sinkAzureSqlDatabaseConnectionStringSecretName": {
										"value": "@item().parameters.sinkAzureSqlDatabaseConnectionStringSecretName",
										"type": "Expression"
									},
									"sinkAzureSqlDatabaseTableSchemaName": {
										"value": "@item().parameters.sinkAzureSqlDatabaseTableSchemaName",
										"type": "Expression"
									},
									"sinkAzureSqlDatabaseTableTableName": {
										"value": "@item().parameters.sinkAzureSqlDatabaseTableTableName",
										"type": "Expression"
									},
									"deleteSourceFile": {
										"value": "@item().parameters.deleteSourceFile",
										"type": "Expression"
									},
									"truncatePriorToCopy": {
										"value": "@item().parameters.truncatePriorToCopy",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			},
			{
				"name": "If AzBlb1Prqt2AzBlb1CsvCopy",
				"type": "IfCondition",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(\n   item().pipelineName, \n   'Azure Blob Single Parquet to Azure Blob Single Csv Copy Pipeline'\n)",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "AzBlb1Prqt2AzBlb1CsvCopy",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "Azure Blob Single Parquet to Azure Blob Single Csv Copy Pipeline",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"sourceAzureBlobConnectionStringSecretName": {
										"value": "@item().sourceAzureBlobConnectionStringSecretName",
										"type": "Expression"
									},
									"sourceAzureBlobSingleParquetContainerName": {
										"value": "@item().sourceAzureBlobSingleParquetContainerName",
										"type": "Expression"
									},
									"sourceAzureBlobSingleParquetFolderPath": {
										"value": "@item.sourceAzureBlobSingleParquetFolderPath",
										"type": "Expression"
									},
									"sourceAzureBlobSingleParquetFileName": {
										"value": "@item().sourceAzureBlobSingleParquetFileName",
										"type": "Expression"
									},
									"sinkAzureBlobConnectionStringSecretName": {
										"value": "@item().sinkAzureBlobConnectionStringSecretName",
										"type": "Expression"
									},
									"sinkAzureBlobSingleCsvContainerName": {
										"value": "@item().sinkAzureBlobSingleCsvContainerName",
										"type": "Expression"
									},
									"sinkAzureBlobSingleCsvFolderPath": {
										"value": "@item().sinkAzureBlobSingleCsvFolderPath",
										"type": "Expression"
									},
									"sinkAzureBlobSingleCsvFileName": {
										"value": "@item().sinkAzureBlobSingleCsvFileName",
										"type": "Expression"
									},
									"deleteSourceFile": {
										"value": "@item().deleteSourceFile",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			},
			{
				"name": "If AzBlb1Prqt2AzBlb1JsonCopy",
				"type": "IfCondition",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(\n   item().pipelineName, \n   'Azure Blob Single Parquet to Azure Blob Single Json Copy Pipeline'\n)",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "AzBlob1Prqt2AzBlob1JsonCopyPipeline",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "Azure Blob Single Parquet to Azure Blob Single Json Copy Pipeline",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"sourceAzureBlobConnectionStringSecretName": {
										"value": "@item().parameters.sourceAzureBlobConnectionStringSecretName",
										"type": "Expression"
									},
									"sourceAzureBlobSingleParquetContainerName": {
										"value": "@item().parameters.sourceAzureBlobSingleParquetContainerName",
										"type": "Expression"
									},
									"sourceAzureBlobSingleParquetFolderPath": {
										"value": "@item().parameters.sourceAzureBlobSingleParquetFolderPath",
										"type": "Expression"
									},
									"sourceAzureBlobSingleParquetFileName": {
										"value": "@item().parameters.sourceAzureBlobSingleParquetFileName",
										"type": "Expression"
									},
									"sinkAzureBlobConnectionStringSecretName": {
										"value": "@item().parameters.sinkAzureBlobConnectionStringSecretName",
										"type": "Expression"
									},
									"sinkAzureBlobSingleJsonContainerName": {
										"value": "@item().parameters.sinkAzureBlobSingleJsonContainerName",
										"type": "Expression"
									},
									"sinkAzureBlobSingleJsonFolderPath": {
										"value": "@item().parameters.sinkAzureBlobSingleJsonFolderPath",
										"type": "Expression"
									},
									"sinkAzureBlobSingleJsonFileName": {
										"value": "@item().parameters.sinkAzureBlobSingleJsonFileName",
										"type": "Expression"
									},
									"deleteSourceFile": {
										"value": "@item().parameters.deleteSourceFile",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			},
			{
				"name": "If AzBlb1Prqt2AzBlb1PrqtCopy",
				"type": "IfCondition",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(\n   item().pipelineName, \n   'Azure Blob Single Parquet to Azure Blob Single Parquet Copy Pipeline'\n)",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "AzBlob1Prqt2AzBlob1PrqtCopyPipeline",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "Azure Blob Single Parquet to Azure Blob Single Parquet Copy Pipeline",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"sourceAzureBlobConnectionStringSecretName": {
										"value": "@item().parameters.sourceAzureBlobConnectionStringSecretName",
										"type": "Expression"
									},
									"sourceAzureBlobSingleParquetContainerName": {
										"value": "@item().parameters.sourceAzureBlobSingleParquetContainerName",
										"type": "Expression"
									},
									"sourceAzureBlobSingleParquetFolderPath": {
										"value": "@item().parameters.sourceAzureBlobSingleParquetFolderPath",
										"type": "Expression"
									},
									"sourceAzureBlobSingleParquetFileName": {
										"value": "@item().parameters.sourceAzureBlobSingleParquetFileName",
										"type": "Expression"
									},
									"sinkAzureBlobConnectionStringSecretName": {
										"value": "@item().parameters.sinkAzureBlobConnectionStringSecretName",
										"type": "Expression"
									},
									"sinkAzureBlobSingleParquetContainerName": {
										"value": "@item().parameters.sinkAzureBlobSingleParquetContainerName",
										"type": "Expression"
									},
									"sinkAzureBlobSingleParquetFolderPath": {
										"value": "@item().parameters.sinkAzureBlobSingleParquetFolderPath",
										"type": "Expression"
									},
									"sinkAzureBlobSingleParquetFileName": {
										"value": "@item().parameters.sinkAzureBlobSingleParquetFileName",
										"type": "Expression"
									},
									"deleteSourceFile": {
										"value": "@item().parameters.deleteSourceFile",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			},
			{
				"name": "If AzBlb1Prqt2AzSqlDbTblCopy",
				"type": "IfCondition",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(\n   item().pipelineName, \n   'Azure Blob Single Parquet to Azure Sql Database Table Copy Pipeline'\n)",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "AzBlob1Prqt2AzSqlDbTblCopyPipeline",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "Azure Blob Single Parquet to Azure Sql Database Table Copy Pipeline",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"sourceAzureBlobConnectionStringSecretName": {
										"value": "@item().parameters.sourceAzureBlobConnectionStringSecretName",
										"type": "Expression"
									},
									"sourceAzureBlobSingleParquetContainerName": {
										"value": "@item().parameters.sourceAzureBlobSingleParquetContainerName",
										"type": "Expression"
									},
									"sourceAzureBlobSingleParquetFolderPath": {
										"value": "@item().parameters.sourceAzureBlobSingleParquetFolderPath",
										"type": "Expression"
									},
									"sourceAzureBlobSingleParquetFileName": {
										"value": "@item().parameters.sourceAzureBlobSingleParquetFileName",
										"type": "Expression"
									},
									"sinkAzureSqlDatabaseConnectionStringSecretName": {
										"value": "@item().parameters.sinkAzureSqlDatabaseConnectionStringSecretName",
										"type": "Expression"
									},
									"sinkAzureSqlDatabaseTableSchemaName": {
										"value": "@item().parameters.sinkAzureSqlDatabaseTableSchemaName",
										"type": "Expression"
									},
									"sinkAzureSqlDatabaseTableTableName": {
										"value": "@item().parameters.sinkAzureSqlDatabaseTableTableName",
										"type": "Expression"
									},
									"deleteSourceFile": {
										"value": "@item().parameters.deleteSourceFile",
										"type": "Expression"
									},
									"truncatePriorToCopy": {
										"value": "@item().parameters.truncatePriorToCopy",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			}
		],
		"annotations": []
	}
}